import { useEffect, useRef, useState } from 'react';

export const Guests = () => {
    const [visibleCards, setVisibleCards] = useState<boolean[]>([]);
    const cardsRef = useRef<HTMLDivElement[]>([]);

    useEffect(() => {
        const observer = new IntersectionObserver(
            (entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        const index = cardsRef.current.indexOf(entry.target as HTMLDivElement);
                        setVisibleCards(prev => {
                            const newVisible = [...prev];
                            newVisible[index] = true;
                            return newVisible;
                        });
                        observer.unobserve(entry.target);
                    }
                });
            },
            { threshold: 0.1 }
        );

        cardsRef.current.forEach(card => {
            if (card) observer.observe(card);
        });

        return () => {
            cardsRef.current.forEach(card => {
                if(card) observer.unobserve(card)
            })
        };
    }, []);

    const addToRefs = (el: HTMLDivElement | null, index: number) => {
        if (el && !cardsRef.current.includes(el)) {
            cardsRef.current[index] = el;
        }
    };

    return (
        <div className="guests-container">
            <h2 className="section-title">–ö–æ–≥–¥–∞ –ø—Ä–∏—Ö–æ–¥—è—Ç –≥–æ—Å—Ç–∏</h2>
            <p className="section-subtitle">–ú–æ–π –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª –ø–æ–≤–µ–¥–µ–Ω–∏—è –¥–ª—è –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π</p>

            <div className="protocol-steps">
                {[
                    {
                        id: 1,
                        type: 'inspection',
                        title: '–¢—â–∞—Ç–µ–ª—å–Ω—ã–π –æ—Å–º–æ—Ç—Ä',
                        description: '–û–±–Ω—é—Ö–∏–≤–∞—é –≥–æ—Å—Ç–µ–π –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç —á—É–∂–∏—Ö –∫–æ—à–∞—á—å–∏—Ö –∑–∞–ø–∞—Ö–æ–≤ –∏ –ø—Ä–∏–Ω–µ—Å–µ–Ω–Ω—ã—Ö –ª–∞–∫–æ–º—Å—Ç–≤. –û—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ —É–¥–µ–ª—è—é –æ–±—É–≤–∏ –∏ —Å—É–º–∫–∞–º.',
                        duration: '–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 3-7 –º–∏–Ω—É—Ç',
                        icon: 'üîç'
                    },
                    {
                        id: 2,
                        type: 'ignore',
                        title: '–¢–∞–∫—Ç–∏–∫–∞ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è',
                        description: '–î–µ–ª–∞—é –≤–∏–¥, —á—Ç–æ –≥–æ—Å—Ç–∏ –º–Ω–µ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–µ–∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã. –£—Ö–æ–∂—É –≤ –¥—Ä—É–≥—É—é –∫–æ–º–Ω–∞—Ç—É, –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ –ø–æ–≤–µ—Ä–Ω—É–≤—à–∏—Å—å —Å–ø–∏–Ω–æ–π.',
                        duration: '–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 10-15 –º–∏–Ω—É—Ç',
                        icon: 'üôà'
                    },
                    {
                        id: 3,
                        type: 'approach',
                        title: '–û—Å—Ç–æ—Ä–æ–∂–Ω–æ–µ —Å–±–ª–∏–∂–µ–Ω–∏–µ',
                        description: '–ü–æ–¥—Ö–æ–∂—É –∫ —Å–∞–º–æ–º—É —Ç–∏—Ö–æ–º—É –≥–æ—Å—Ç—é, –¥–µ–ª–∞—è –≤–∏–¥, —á—Ç–æ —Å–ª—É—á–∞–π–Ω–æ –æ–∫–∞–∑–∞–ª–∞—Å—å —Ä—è–¥–æ–º. –ü–æ–∑–≤–æ–ª—è—é –ø–æ–≥–ª–∞–¥–∏—Ç—å —Å–µ–±—è —Ä–æ–≤–Ω–æ –æ–¥–∏–Ω —Ä–∞–∑.',
                        duration: '–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 2-3 –º–∏–Ω—É—Ç—ã',
                        icon: 'üêæ'
                    },
                    {
                        id: 4,
                        type: 'test',
                        title: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç—å',
                        description: '–í–Ω–µ–∑–∞–ø–Ω–æ –∑–∞–ø—Ä—ã–≥–∏–≤–∞—é –≥–æ—Å—Ç—é –Ω–∞ –∫–æ–ª–µ–Ω–∏ –±–µ–∑ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è. –ï—Å–ª–∏ –Ω–µ —Å–±—Ä–∞—Å—ã–≤–∞—é—Ç - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∞—é—Ç —Å—Ç–∞—Ç—É—Å "–ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π".',
                        duration: '–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: –¥–æ –∫–æ–Ω—Ü–∞ –≤–∏–∑–∏—Ç–∞',
                        icon: '‚ö°'
                    },
                    {
                        id: 5,
                        type: 'begging',
                        title: '–í—ã–ø—Ä–∞—à–∏–≤–∞–Ω–∏–µ –µ–¥—ã',
                        description: '–ò—Å–ø–æ–ª—å–∑—É—é –≥–æ—Å—Ç–µ–π –∫–∞–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ —É–≥–æ—â–µ–Ω–∏–π. –î–µ–ª–∞—é –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∂–∞–ª–æ–±–Ω—ã–µ –≥–ª–∞–∑–∞, –¥–∞–∂–µ –µ—Å–ª–∏ —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø–æ–µ–ª–∞.',
                        duration: '–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: –ø–æ–∫–∞ –Ω–µ –¥–∞–¥—É—Ç –µ–¥—É',
                        icon: 'ü•∫'
                    }
                ].map((step, index) => (
                    <div
                        key={step.id}
                        ref={el => addToRefs(el, index)}
                        className={`protocol-card protocol-card--${step.type} ${visibleCards[index] ? 'visible' : ''
                            }`}
                    >
                        <div className="protocol-number">{String(step.id).padStart(2, '0')}</div>
                        <div className="protocol-content">
                            <h3>{step.title}</h3>
                            <p>{step.description}</p>
                            <div className="protocol-duration">{step.duration}</div>
                        </div>
                        <div className="protocol-icon floating pulse spin-flicker">
                            {step.icon}
                        </div>
                    </div>
                ))}
            </div>

            <div className="guest-rules">
                <h3>–°—Ç—Ä–æ–≥–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –≥–æ—Å—Ç–µ–π:</h3>
                <ul className="rules-list">
                    {[
                        '–ù–µ –ø—ã—Ç–∞—Ç—å—Å—è –±—Ä–∞—Ç—å –º–µ–Ω—è –Ω–∞ —Ä—É–∫–∏ –±–µ–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è',
                        '–ù–µ —Å–º–æ—Ç—Ä–µ—Ç—å –º–Ω–µ –ø—Ä—è–º–æ –≤ –≥–ª–∞–∑–∞ - —ç—Ç–æ —É–≥—Ä–æ–∑–∞',
                        '–ù–µ –≥–ª–∞–¥–∏—Ç—å –ø—Ä–æ—Ç–∏–≤ —à–µ—Ä—Å—Ç–∏ - —ç—Ç–æ –∫–∞—Ä–∞–µ—Ç—Å—è —É–∫—É—Å–æ–º',
                        '–í—Å–µ –ø—Ä–∏–Ω–µ—Å–µ–Ω–Ω—ã–µ —É–≥–æ—â–µ–Ω–∏—è –ø–æ–¥–ª–µ–∂–∞—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ',
                        '–§–æ—Ç–æ—Å–µ—Å—Å–∏–∏ —Ç–æ–ª—å–∫–æ —Å –º–æ–µ–≥–æ —Å–æ–≥–ª–∞—Å–∏—è (–æ–±—ã—á–Ω–æ —Å–æ–≥–ª–∞—à–∞—é—Å—å –∑–∞ —É–≥–æ—â–µ–Ω–∏–µ)'
                    ].map((rule, index) => (
                        <li key={index}>{rule}</li>
                    ))}
                </ul>

                <div className="emergency-box">
                    <h4>–ß—Ä–µ–∑–≤—ã—á–∞–π–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏:</h4>
                    <p>–ï—Å–ª–∏ —è –≤–Ω–µ–∑–∞–ø–Ω–æ —É–±–µ–∂–∞–ª–∞ –∏ —Å–ø—Ä—è—Ç–∞–ª–∞—Å—å - –∑–Ω–∞—á–∏—Ç, –∫—Ç–æ-—Ç–æ –Ω–∞—Ä—É—à–∏–ª –ø—Ä–æ—Ç–æ–∫–æ–ª. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è
                        –æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –≤–∏–¥–Ω–æ–º –º–µ—Å—Ç–µ –ø–∞–∫–µ—Ç–∏–∫ —Å –≤–ª–∞–∂–Ω—ã–º –∫–æ—Ä–º–æ–º –¥–ª—è –ø—Ä–∏–º–∏—Ä–µ–Ω–∏—è.</p>
                </div>
            </div>
        </div>
    );
};